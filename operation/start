#!/bin/sh

# start — Tool to start a deployment

# El Cid (https://github.com/melusina-org/cid)
# This file is part of El Cid.
#
# Copyright © 2017–2023 Michaël Le Barbier
# All rights reserved.

# This file must be used under the terms of the MIT License.
# This source file is licensed as described in the file LICENSE, which
# you should have received as part of this distribution. The terms
# are also available at https://opensource.org/licenses/MIT

: ${TOPLEVELDIR:=$(git rev-parse --show-toplevel)}
: ${package:=cid}
: ${packagedir:=/cid}
: ${prefix:=/usr/local}
: ${cachedir:=${prefix}/var/cache${packagedir}}
: ${subrdir:=${TOPLEVELDIR}/subr}
: ${composedir:=${TOPLEVELDIR}/docker/compose}

. "${subrdir}/stdlib.sh"
. "${subrdir}/config.sh"
. "${subrdir}/tenant.sh"

: ${compose_project:=NOT-SET}
: ${compose_environment:=docker-compose}

#
# Main
#

compose_project()
{
    if [ "${compose_project}" = 'NOT-SET' ]; then
	printf '%s' "$(tenant_name)"
    else
	printf '%s' "${compose_project}"
    fi
}

compose_file()
{
    if [ -f "${CID_TENANT_DIR}/${compose_environment}.yml" ]; then
	printf '%s' "${CID_TENANT_DIR}/${compose_environment}.yml"
    elif [ -f "${composedir}/${compose_environment}.yml" ]; then
	printf '%s' "${composedir}/${compose_environment}.yml"
    else
	failwith '%s: Nothing is known about this docker environment' "${compose_environment}"
    fi	   
}

compose_main()
{
    local OPTIND OPTION OPTARG

    status=1
    OPTIND=1

    while getopts 'hp:e:' OPTION; do
        case ${OPTION} in
            e)	compose_environment="${OPTARG}";;
	    p)	compose_project="${OPTARG}";;
            *)	failwith -x 70 'docker_compose: %s: Unsupported option.' "${OPTION}";;
        esac
    done
    shift $(expr ${OPTIND} - 1)

    (
	: ${CID_TENANT_DIR:?This docker-compose requires the CID_TENANT_DIR to be set. See tenant_shell.}
	config_file="${CID_TENANT_DIR}/cid.conf"

	CID_TENANT_NAME="$(tenant_name)"
	CID_TOPLEVELDIR="${TOPLEVELDIR}"

	export CID_TENANT_DIR
	export CID_TENANT_NAME
	export CID_TOPLEVELDIR
        exec docker-compose\
             --file "$(compose_file)"\
             --project-name "$(compose_project)"\
	     up -d
    )
}

compose_main "$@"

# End of file `start'
