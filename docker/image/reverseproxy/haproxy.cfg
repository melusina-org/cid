# haproxy.cfg — Reverse Proxy Configuration

# El Cid (https://github.com/melusina-org/cid)
# This file is part of El Cid.
#
# Copyright © 2015–2024 Michaël Le Barbier
# All rights reserved.

# This file must be used under the terms of the MIT License.
# This source file is licensed as described in the file LICENSE, which
# you should have received as part of this distribution. The terms
# are also available at https://opensource.org/licenses/MIT

# Forward to a different web server based on URI
#  https://serverfault.com/questions/127491/haproxy-forward-to-a-different-web-server-based-on-uri
#
# SSL Termination:
#  https://serversforhackers.com/c/using-ssl-certificates-with-haproxy

global
	chroot /var/lib/haproxy
	stats socket /var/run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log     global
	mode    http
	option  httplog
	option  dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend http_in
	mode http
	bind *:80
	bind 0.0.0.0:443 ssl crt /etc/ssl/private/localhost.pem
  	http-request redirect scheme https unless { ssl_fc }
	http-request set-header X-Forwarded-Proto https if { ssl_fc }
	http-request set-header X-Forwarded-Proto http if !{ ssl_fc }
	acl is_for_trac path -m beg /trac/
	acl is_for_trac path -m str /trac
	acl is_for_keycloak path -m beg /authorization/
	acl is_for_keycloak path -m str /authorization
	acl is_for_webserver hdr_beg(host) -i www.
	use_backend trac_server if is_for_webserver
	use_backend trac_server if is_for_trac
	use_backend keycloak_server if is_for_keycloak
	default_backend no_server

backend trac_server
	balance roundrobin
	option httpchk HEAD /server-status HTTP/1.0
	option httpclose
	option forwardfor
	server trac trac:80 check

backend keycloak_server
	balance roundrobin
	option httpchk
	option httpclose
	option forwardfor
        http-check connect port 9000
	http-check send meth GET uri /authorization/health/ready
	server keycloak keycloak:8080 check

backend no_server
	http-request deny deny_status 400

# End of file `haproxy.cfg'
